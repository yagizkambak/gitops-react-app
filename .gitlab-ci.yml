stages:
  - build
  - test
  - package
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: node:14.17-alpine
  script:
    - npm install
    - npm run-script build
  artifacts:
    when: on_success
    paths:
    - "build"
    - "public"
  
unit-test-job:   
  stage: test
  image: node:14.17-alpine
  variables:
    CI: "true"
  script:
    - echo "Running unit tests..."
    - npm test -- --coverage
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  allow_failure: true


docker:
  stage: package
  image: docker:stable
  needs:
    - job: build-job
      artifacts: true
  variables:
    DOCKER_BUILD_DIR: "."
    DOCKER_BUILD_FILE: "Dockerfile"
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_USER: $CI_REGISTRY_USER
    DOCKER_PASSWORD: $CI_REGISTRY_PASSWORD
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_IMAGE_URI: "${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}"
  services:
    - name: docker:20.10.16-dind
      entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]
  before_script:
    - export DOCKER_IMAGE_TAG=${CI_COMMIT_TAG:="${CI_COMMIT_SHORT_SHA}"}
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
    - |
      docker build -t "${DOCKER_IMAGE_URI}:${DOCKER_IMAGE_TAG}" -f "${DOCKER_BUILD_DIR}/${DOCKER_BUILD_FILE}" ${DOCKER_BUILD_DIR}
      docker push "${DOCKER_IMAGE_URI}:${DOCKER_IMAGE_TAG}"


deploy-job:      
  stage: deploy  
  image:
    name: alpine/git:latest
    entrypoint: [""]
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_IMAGE_URI: "${DOCKER_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_SLUG}"
  needs:
    - job: docker
      artifacts: false
  before_script:
    - export DOCKER_IMAGE_TAG=${CI_COMMIT_TAG:="${CI_COMMIT_SHORT_SHA}"}
  script:
    - echo "Deploying application..."
    - git clone --depth 1 https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/devops-obss/demos/gitops-argo-cd.git
    - echo "Updating image..."
    - IMAGE="${DOCKER_IMAGE_URI}:${DOCKER_IMAGE_TAG}"
    - DEPLOYMENT_FILE="gitops-argo-cd/charts/gitops-react-app/deployment.yaml"
    - 'sed -i "s#image: .*#image: $IMAGE#" $DEPLOYMENT_FILE'
    - cd gitops-argo-cd
    - git config user.email "yagiz.kucukkambak@obss.com.tr"
    - git config user.name "OBSS CI Automation Bot"
    - git commit -am "app updated to version:${CI_COMMIT_SHORT_SHA}"
    - git remote set-url origin https://gitlab-ci-token:$PAT_TOKEN@$CI_SERVER_HOST/devops-obss/demos/gitops-argo-cd.git
    - git push
    - echo "Application successfully updated."